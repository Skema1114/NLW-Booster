==> BACKEND
--> AULA 01

// instalar projeto com basico de detalhes
npm init -y

// instala o express
npm install express

// instalar a tipagem do express, o tsc precisa dessa tipagem
npm install @types/express -D

// instalar o ts-node, para que ele o entenda
npm install ts-node -D

// instalar o tsc
npm install typescript -D

// criar o arquivo de inicialização do typescript
npx tsc --init

// pacote que observa o codigo e restarta quando tem alterações
npm install ts-node-dev -D

--> AULA 02

// no express é preciso informar o tipo de requisição que será recebida (tipo json)

// instalação do knex para criação do banco de dados e padronização para que outros bancos aceitem as querys
npm install knex

// instalação do banco sqlite
npm install sqlite3

// cria a migrate linkando o arquivo de config do knex
// esse comando depois vai nos cripts com o nome de "knex:migrate"
npx knex --knexfile knexfile.ts migrate:latest

// comando para executar as seeds, adicionar nos scripts com nome de "knex:seed"
npx knex --knexfile knexfile.ts seed:run

** se precisar que a aplicação ja inicie com cadastros no banco de dados, utiliza-se o SEEDS do KNEX.JS

** serialização é o processo de transformar os dados de uma requisição para um novo formato mais acessivel para quem está as requisitando 
..

// criando um projeto reactJS com template para tsc
npx create-react-app web --template=typescript

